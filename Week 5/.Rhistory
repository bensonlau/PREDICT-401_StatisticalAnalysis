)
z <- (45 - (100 * 0.53))/stdDev
p <- 1-pnorm(z,0,1,lower.tail=TRUE)
1-p
z <- (78-68.2)/10.4
p <- 1-pnorm(z,0,1,lower.tail=TRUE)
b <- (19.5-p*75)/sqrt(75*p*(1-p))
b <- (19.5-p*75)/sqrt(75*p*(1-p))
pnorm(b , 0, 1, lower.tail=FALSE)
z <- qnorm(0.975, 0, 1, lower.tail = TRUE)
n <- z^2*0.5*0.5/0.05^2   #  [1] 384.1459
n
values <- matrix(c(30, 60, 20, 75), ncol = 2, byrow = TRUE)
colnames(values) <- c("purchase", "notPurchase")
rownames(values) <- c("signUp", "notSignUp")
values
?pf
?dhyper
?sd
qt(0.99, 8, lower.tail = TRUE)
?Qt
?qt
before <- c(38,	27,	30,	41,	36,	38,	33,	36,	44)
after <-  c(22,	28,	21,	38,	38,	26,	19,	31,	35)
delta <- before - after  #  null hypothesis is that the difference is zero.
#  alternative hypothesis is the difference is > 0.
sd(delta)
qt(0.99, 8, lower.tail = TRUE)
t.test(delta, alternative = c("greater"), mu = 0, paired = FALSE, conf.level = 0.99)
?t.test
qt(0.99, 8, lower.tail = TRUE)
delta <- before - after
sd(delta)
qt(0.99, 8
)
qt(0.99, 8, lower.tail = TRUE)
t.test(delta, alternative = c("greater"), mu = 0, paired = FALSE, conf.level = 0.99)
?chisq.test
approve <- c(8, 18, 7)
not.approve <- c(17, 13, 37)
vote <- cbind(approve, not.approve)
chisq.test(vote, correct = FALSE)
x<-c(2,4,5,6)
y<-c(7,11,13,20)
lm (x~y)
lm (y~x)
?lm
47.0   46.6   27.4   33.2   40.9
y     8      10      10        5      10
x<-c(47.0,46.6,27.4,33.2,40.9)
y<-c(8,10,10,5,10)
cor(y,x)
?cor
s1^2/s2^2
s1<-2.0
s2<-1.1
s1^2/s2^2
qnorm(.95)
?qnorm
?qnorm(.975)
qnorm(.975)
d+qnorm(.975)*(sd/n)
d<-3.0
d+qnorm(.975)*(sd/n)
d<-3.0
sd<-2.911
n<-8
d+qnorm(.975)*(sd/n)
d+qnorm(.975)*(sd/
d+qnorm(.975)*(sd/sqrt(n))
d+qnorm(.95)*(sd/sqrt(n))
d+qnorm(.975,lower.tail=FALSE)*(sd/sqrt(n))
d+qnorm(.95,lower.tail=FALSE)*(sd/sqrt(n))
qnorm(1-(0.5/2))
?Qt
?qt
d<-3.0
sd<-2.911
n<-8 #since n<30, use t-test
df<-n-1
t<-qt((1-0.5/2,df))
t<-qt(1-0.5/2,df)
d+t*(sd/sqrt(n))
d<-3.0
sd<-2.911
n<-8 #since n<30, use t-test
df<-n-1
t<-qt(1-0.5/2,df)
d+t*(sd/sqrt(n))
d-t*(sd/sqrt(n))
t<-qt(1-0.05/2,df)
d+t*(sd/sqrt(n))
d-t*(sd/sqrt(n))
system("python Desktop/pythonTest.py")
?read.csv
winback<-read.csv('winback_accounts.csv')
getwd()
setwd("~/Documents/StudioWorkspace/SQL")
winback<-read.csv('winback_accounts.csv')
sum(disinct(src_acct_id))
sum(distinct(src_acct_id))
sum(winback$src_acct_id)
sum(as.numeric(winback$src_acct_id))
count(winback$src_acct_id)
dim(winback)
dim(winback$activity_date)
ssummary(winback)
summary(winback)
summary(winback$activity_date)
summary(winback$base_pkg_promo_nm)
winback<-read.csv('winback_accounts.csv')
summary(winback)
summary(winback$base_pkg_promo_nm)
winback<-read.csv('winback_accounts.csv')
summary(winback)
summary(winback$base_pkg_promo_nm)
summary(winback$base_pkg_coupon_cd)
summary(winback$base_pkg_prd_nm)
#looks like there are a ton of nulls for the package when they are wonback
summary(winback$base_pkg_promo_nm)
summary(winback$base_pkg_coupon_cd)
summary(winback$base_pkg_prd_nm)
histogram(winback$base_pkg_promo_nm)
hist(winback$base_pkg_promo_nm)
hist(summary(winback$base_pkg_promo_nm))
hist(summary(winback$base_pkg_prd_nm))
barplot(prop.table(table(winback$base_pkg_prd_nm)))
barplot(prop.table(table(winback$base_pkg_promo_nm)))
summary(winback$base_pkg_promo_nm)
barplot(prop.table(table(winback$base_pkg_promo_nm)))
summary(winback$base_pkg_coupon_cd)
barplot(prop.table(table(winback$base_pkg_coupon_cd)))
summary(winback$base_pkg_prd_nm)
barplot(prop.table(table(winback$base_pkg_prd_nm)))
#looks like there are a ton of nulls for the package when they are wonback
summary(winback$base_pkg_promo_nm)
barplot(prop.table(table(winback$base_pkg_promo_nm)))
summary(winback$base_pkg_prd_nm)
barplot(prop.table(table(winback$base_pkg_prd_nm)))
summary(winback$base_pkg_prd_nm)
summary(winback)
#can drilldown into specific columns of data
summary(winback$activity_date)
#can drilldown into specific columns of data
summary(winback$activity_date)
barplot(prop.table(table(winback$activity_date)))
barplot(winback$activity_date)
as.numeric(winback$activity_date)
summary(winback$activity_date)
barplot(prop.table(table(winback$base_pkg_promo_nm)))
summary(winback$base_pkg_prd_nm)
summary(winback$base_pkg_prd_nm)
barplot(prop.table(table(winback$base_pkg_prd_nm)))
prop.table(table(winback$base_pkg_prd_nm)))
prop.table(table(winback$base_pkg_prd_nm))
#Requirements:
#Ability to understand performance of winback programs
##what offers/packages/coupons they use when they reconnect
#product they come back on tends to be
summary(winback$base_pkg_prd_nm)
barplot(prop.table(table(winback$base_pkg_prd_nm)))
prop.table(table(winback$base_pkg_prd_nm))
table(winback$base_pkg_prd_nm)
winback$base_pkg_prd_nm
summary(winback$base_pkg_promo_nm)
#looks like there are a ton of nulls for the package when they are wonback
summary(winback$base_pkg_coupon_cd)
#Requirements:
#Ability to understand performance of winback programs
##what offers/packages/coupons they use when they reconnect
##What package did they come back on?
##What package did they disconnect on?
#product they come back on tends to be
summary(winback$base_pkg_prd_nm)
barplot(prop.table(table(winback$base_pkg_prd_nm)))
prop.table(table(winback$base_pkg_prd_nm))
summary(winback$base_pkg_promo_nm)
#looks like there are a ton of nulls for the promo when they are wonback
summary(winback$base_pkg_coupon_cd)
summary(winback$base_pkg_coupon_cd_ind)
summary(winback$base_pkg_coupon_ind)
pie(summary(winback$base_pkg_coupon_ind)
)
summary(winback$base_pkg_coupon_ind)[1,2]
x<-summary(winback$base_pkg_coupon_ind)[1,2]
x<-summary(winback$base_pkg_coupon_ind)
pie(x[2.,3)
pie(x[2,3)
pie(x[2,3])
pie(x[2:3])
summary(winback$base_pkg_coupon_ind)
pie(summary(winback$base_pkg_coupon_ind)[2:3])
summary(winback$base_pkg_coupon_ind)
pie(summary(winback$base_pkg_coupon_ind)[2:3])
summary(winback$base_pkg_coupon_ind[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3])
summary(winback$base_pkg_coupon_ind)[2:3]
pie(summary(winback$base_pkg_coupon_ind)[2:3])
table(winback$base_pkg_coupon_ind)
prop.table(table(winback$base_pkg_prd_nm))
prop.table(table(winback$base_pkg_coupon_ind))
summary(winback$base_pkg_coupon_ind)[2:3]
prop.tablke(summary(winback$base_pkg_coupon_ind)[2:3])
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
summary(winback$base_pkg_coupon_ind)[2:3]
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3])
summary(winback$base_pkg_coupon_cd)
##just looking at coupons is going to be messy because of the distinct types of coupons.  will probably want to look at the specific offer they came back on; check on the logic for this in corresponding tableau report to do this.
?barplot
barplot(prop.table(table(winback$base_pkg_prd_nm)),names.arg("Live A Little","Just RIght"))
barplot(prop.table(table(winback$base_pkg_prd_nm))),names.arg("Live A Little","Just Right")
prop.table(table(winback$base_pkg_prd_nm))
table(winback$base_pkg_prd_nm)
?table
table(sort(winback$base_pkg_prd_nm))
?sort
factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It"))
summary(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))
barplot(prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))))
prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It"))))
#Requirements:
#Ability to understand performance of winback programs
##what offers/packages/coupons they use when they reconnect
##What package did they come back on?
##What package did they disconnect on?
#product they come back on tends to be
#summary(winback$base_pkg_prd_nm)
#ordering it from cheapest to most expensive package
summary(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))
prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It"))))
barplot(prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))))
#Requirements:
#Ability to understand performance of winback programs
##what offers/packages/coupons they use when they reconnect
##What package did they come back on?
##What package did they disconnect on?
#product they come back on tends to be
#summary(winback$base_pkg_prd_nm)
#ordering it from cheapest to most expensive package
summary(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))
prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It"))))
barplot(prop.table(table(factor(winback$base_pkg_prd_nm, levels = c("Live a Little", "Just Right", "Go Big", "Gotta Have It")))))
pie(summary(winback$base_pkg_coupon_ind)[1:3])
pie(summary(winback$base_pkg_coupon_ind)[1,3])
pie(summary(winback$base_pkg_coupon_ind)[1,3])
pie(summary(winback$base_pkg_coupon_ind)[2,3])
pie(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[1:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3])
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rockchalk", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("stats4", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
barplot(prop.table(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y")))))
?barplot
#how many customers come back on a coupon?
summary(winback$base_pkg_coupon_ind)[2:3]
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3]) #this is only for N and Y but majority of the rows have blank entries for these dimensions
barplot(prop.table(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y")))))
#how many customers come back on a coupon?
summary(winback$base_pkg_coupon_ind)[2:3]
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3]) #this is only for N and Y but majority of the rows have blank entries for these dimensions
barplot(prop.table(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y")))))
barplot(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y"))))
#how many customers come back on a coupon?
summary(winback$base_pkg_coupon_ind)[2:3]
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3]) #this is only for N and Y but majority of the rows have blank entries for these dimensions
barplot(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y"))))
barplot(prop.table(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y")))))
#how many customers come back on a coupon?
summary(winback$base_pkg_coupon_ind)[2:3]
prop.table(summary(winback$base_pkg_coupon_ind)[2:3])
pie(summary(winback$base_pkg_coupon_ind)[2:3]) #this is only for N and Y but majority of the rows have blank entries for these dimensions
barplot(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y"))))
barplot(prop.table(table(factor(winback$base_pkg_coupon_ind, levels = c("","Y")))))
mydata$VOLUME<-mydata$LENGTH * mydata$DIAM * mydata$HEIGHT
setwd("~/Google Drive/0. FALL17_PREDICT-401_StatisticalAnalysis/Week 5")
abalones.csv
require(ggplot2)
# Predict 401 Data Analysis Assignment #1
#Read text file into R, make sure file is in
#working directory
mydata<-read.csv("abalones.csv",sep=",")
#Checking data for number of observations and variables
str(mydata)
#Calculate two new variables: VOLUME and RATIO
#and add them to “mydata.”
mydata$VOLUME<-mydata$LENGTH * mydata$DIAM * mydata$HEIGHT
mydata$RATIO<-mydata$SHUCK / mydata$VOLUME
#Obtain and present descriptive statistics from mydata.
#Briefly discuss the variable types and distributional
#implications such as potential skewness and outliers.
summary(mydata)
# Checking skewness and kurtosis helps to reveal more about distribution shape.
# A normal distribution has a skewness of zero and kurtosis of 3.0.
require(moments)
require(ggplot2)
skewness(mydata$LENGTH)
kurtosis(mydata$LENGTH)
skewness(mydata$DIAM)
kurtosis(mydata$DIAM)
skewness(mydata$WHOLE)
kurtosis(mydata$WHOLE)
skewness(mydata$SHUCK)
kurtosis(mydata$SHUCK)
skewness(mydata$RINGS)
kurtosis(mydata$RINGS)
skewness(mydata$VOLUME)
kurtosis(mydata$VOLUME)
skewness(mydata$RATIO)
kurtosis(mydata$RATIO)
#(1)(b) Generate a table of counts using SEX and CLASS. Add
#margins to this table (Hint: There should be 15 cells in
#this table plus the marginal totals. Apply table() first
#followed with addmargins() (Kabacoff Section 7.2 pages
#144-147)). Also, present a barplot of these data. Discuss
#the sex distribution of abalones. Is there anything
#unusual to note?
out<-addmargins(table(mydata$SEX,mydata$CLASS,dnn=c(
"SEX","CLASS")))
barplot(out, main='Bar Plot of SEX')
barplot(out[1:3,1:5],main="CLASS Membership, Sex-differentiated",
ylab = "Frequency"
, beside = TRUE,
col=c("red","blue", "green"), legend =
rownames(out[1:3,]))
counts <-rbind(sample.one, sample.two, sample.three)
barplot(counts, main="Comparison of Binomial Sample
Proportions",ylab = "Frequency", ylim = c(0,0.5)
,xlab="Number of Successes", beside = TRUE,
col=c("blue","red", "green"),legend =
rownames(counts), names.arg =
c("0","1","2","3","4") )
par(mfrow = c(1,1))
set.seed(123)
sample.one <-table(rbinom(1000,4,0.45))/1000
sample.two <-table(rbinom(1000,4,0.55))/1000
sample.three <-table(rbinom(1000,4,0.5))/1000
counts <-rbind(sample.one, sample.two, sample.three)
barplot(counts, main="Comparison of Binomial Sample
Proportions",ylab = "Frequency", ylim = c(0,0.5)
,xlab="Number of Successes", beside = TRUE,
col=c("blue","red", "green"),legend =
rownames(counts), names.arg =
c("0","1","2","3","4") )
#Select a simple random sample of 200 observations from
#“mydata” and identify this sample as "work".
#Use set.seed(123) prior to drawing this sample.
set.seed(123)
work <- mydata[sample(1:nrow(mydata),200),]
plot(work[, 2:6])
#(2)(a) Use “mydata” to plot WHOLE versus VOLUME.
#What does the wedge-shaped scatter of data points suggest
#about the connection between WHOLE and VOLUME?
#Compare to the scatterplot matrix, and interpret this plot
#in terms of abalone physical measurements.
plot(mydata$WHOLE, mydata$VOLUME)
#2)(b) Use “mydata” to plot SHUCK versus WHOLE. How does the
#variability in this plot differ from the plot in (a)?
#As an aid to interpretation, determine the maximum value of
#the ratio of SHUCK to WHOLE. Plot on the chart a straight
#line with zero intercept using this maximum value as the
#slope of the line. (Use abline() to add this line to the
#plot. Use help(abline) in R to determine the coding for
#the slope and intercept arguments in the functions.)
plot(mydata$WHOLE, mydata$SHUCK, main="Scatterplot Of
Shuck VS Whole")
ratioShuckToWhole<-mydata$SHUCK / mydata$WHOLE
max(ratioShuckToWhole)
abline(a=0,b=max(ratioShuckToWhole))
#(3)(a) Use “mydata” to present a display showing
#histograms, boxplots and Q-Q plots of RATIO differentiated
#by sex. This can be done using par(mfrow = c(3,3)) and base
#R coding. The first row would show the histograms, the
#second row would show the boxplots and the third row would
#show the Q-Q plots. Be sure these displays are legible.
#Discuss your observations.
# The 'mfrow' and 'mfcol' arguments can be passed to par() to create multi-figure
# plots in base R. par() is used to set or query graphical parameters; 'mfrow' and # 'mfcol' to create multi-figure plots by row or column, respectively.
# ?par(), ?hist(), ?boxplot(), ?qqnorm(), ?qqline() to review documentation pages.
par(mfrow = c(3, 3))
hist(mydata[mydata$SEX == "I", "RATIO"], col = "red",
main = "Infant Ratio", xlab = "Ratio")
hist(mydata[mydata$SEX == "F", "RATIO"], col = "green",
main = "Female Ratio", xlab = "Ratio")
hist(mydata[mydata$SEX == "M", "RATIO"], col = "blue",
main = "Male Ratio", xlab = "Ratio")
boxplot(mydata[mydata$SEX == "I", "RATIO"], col = "red",
main = "Infant Ratio")
boxplot(mydata[mydata$SEX == "F", "RATIO"], col = "green",
main = "Female Ratio")
boxplot(mydata[mydata$SEX == "M", "RATIO"], col = "blue",
main = "Male Ratio")
qqnorm(mydata[mydata$SEX == "I", "RATIO"], main =
"Q-Q Plot of Ratio for Infant")
qqline(mydata[mydata$SEX == "I", "RATIO"])
qqnorm(mydata[mydata$SEX == "F", "RATIO"], main =
"Q-Q Plot of Ratio for Female")
qqline(mydata[mydata$SEX == "F", "RATIO"])
qqnorm(mydata[mydata$SEX == "M", "RATIO"], main =
"Q-Q Plot of Ratio for Male")
qqline(mydata[mydata$SEX == "M", "RATIO"])
par(mfrow = c(1, 1)) # resets 'mfrow' to default value
#(4)(a) With “mydata,” display two separate sets of
#side-by-side boxplots for VOLUME and WHOLE differentiated
#by CLASS (Davies Section 14.3.2).
#Show five boxplots for
#VOLUME in one display and five boxplots for WHOLE
#(making two separate displays).
install.packages(c("ggplot2", "gridExtra"))
# loads packages
library(ggplot2)
library(gridExtra) #useful for creating multi-figure plots
grid.arrange(
ggplot(mydata, aes(x = CLASS, y = VOLUME)) +
geom_boxplot() +
ggtitle("Boxplot of VOLUME by CLASS"),
ggplot(mydata, aes(x = CLASS, y = WHOLE)) +
geom_boxplot() +
ggtitle("Boxplot of WHOLE by CLASS"),
nrow = 1)
#Also, create two separate
#scatterplots of VOLUME and WHOLE versus RINGS. Present
#these displays in one graphic, the boxplots in one row and
#the scatterplots in a second row.
#Base R or ggplot2 may be
#used How well do you think these variables would perform as
#predictors of age?.
grid.arrange(
ggplot(mydata, aes(x = CLASS, y = VOLUME)) +
geom_point() +
ggtitle("Scatterplot of VOLUME by CLASS"),
ggplot(mydata, aes(x = CLASS, y = WHOLE)) +
geom_point() +
ggtitle("Scatterplot of WHOLE by CLASS"),
nrow = 1)
grid.arrange(
ggplot(mydata, aes(x = CLASS, y = VOLUME)) +
geom_boxplot() +
ggtitle("Boxplot of VOLUME by CLASS"),
ggplot(mydata, aes(x = CLASS, y = WHOLE)) +
geom_boxplot() +
ggtitle("Boxplot of WHOLE by CLASS"),
ggplot(mydata, aes(x = RINGS, y = VOLUME)) +
geom_point() +
ggtitle("Scatterplot of VOLUME by RINGS"),
ggplot(mydata, aes(x = RINGS, y = WHOLE)) +
geom_point() +
ggtitle("Scatterplot of WHOLE by RINGS"),
nrow = 2)
#(5)(a) Use aggregate() with “mydata” to compute the mean
#values of VOLUME, SHUCK and RATIO for each combination of
#SEX and CLASS. Then, using matrix(), create matrices of the
#mean values. Using the “dimnames” argument within matrix()
#or the rownames() and colnames() functions on the matrices,
#label the rows by SEX and columns by CLASS.
#Present the three matrices (Kabacoff Section 5.6.2,
#p. 110-111). You do not need to be concerned with the
#number of digits presented.
￼
aggvol <- aggregate(VOLUME ~ SEX+CLASS, data = mydata, mean)
aggshuck <- aggregate(SHUCK ~ SEX+CLASS, data = mydata, mean)
aggratio <- aggregate(RATIO ~ SEX+CLASS, data = mydata, mean)
volmatrix<-matrix(aggvol$VOLUME, nrow=3,ncol=5,
dimnames=list(c("Female","Infant","Male"),c("A1","A2","A3","A4","A5")))
shuckmatrix<-matrix(aggshuck$SHUCK, nrow=3,ncol=5,
dimnames=list(c("Female","Infant","Male"),c("A1","A2","A3","A4","A5")))
ratiomatrix<-matrix(aggratio$RATIO, nrow=3,ncol=5,
dimnames=list(c("Female","Infant","Male"),c("A1","A2","A3","A4","A5")))
#(5)(b) Present three graphs. Each graph should be generated
#with three separate lines appearing, one for each sex. The
#first should show mean RATIO versus CLASS; the second,
#average VOLUME versus CLASS; the third, SHUCK versus CLASS.
#What questions do these plots raise? Abalones are said to
#be mature when they have more than ten rings. Do you see
#evidence in these plots to support this statement? Discuss.
with(mydata, interaction.plot(CLASS, SEX, RATIO, type = "b",
ylab = "RATIO", col =
c("blue", "red", "black"), xlab = "CLASS", lwd = 2,
trace.label = "SEX", xpd = TRUE,main =
"Plot of Mean RATIO versus CLASS for Three Sexes"))
with(mydata, interaction.plot(CLASS, SEX, VOLUME, type = "b",
ylab = "VOLUME", col =
c("blue", "red", "black"), xlab = "CLASS", lwd = 2,
trace.label = "SEX", xpd = TRUE,main =
"Plot of Average VOLUME versus CLASS for Three Sexes"))
with(mydata, interaction.plot(CLASS, SEX, SHUCK, type = "b",
ylab = "SHUCK", col =
c("blue", "red", "black"), xlab = "CLASS", lwd = 2,
trace.label = "SEX", xpd = TRUE,main =
"Plot of SHUCK versus CLASS for Three Sexes"))
#Conclusions
#Please respond to each of the following questions:
#1) What are some plausible reasons that explain the failure
#of the original study? Consider to what extent abalone
#physical measurements may be used for predicting age.
#2) Setting the abalone data and analysis aside, if you were
#presented with an overall histogram and summary statistics
#from a sample and no other information, what questions
#might you ask before accepting them as representative of
#that population?
#3) What do you see as difficulties when drawing conclusions
#from observational studies? Can causality be determined?
#What might be learned from such studies?
install.packages(c("ggplot2", "gridExtra"))
plot(work[, 2:6])
plot(work[, 2:6])
hist(mydata$RATIO)
qqnorm(mydata$RATIO)
